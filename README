Setup instructions:

The build script is based on Gradle, and can be ran via the provided 'Gradle wrapper' (the ./gradlew shell script) or from a manual installation of Gradle.

If Gradle is installed manually, the 'gradle' command can be used instead of the Gradle wrapper shell script './gradlew' in the instructions below.  Instructions for installing Gradle manually are provided below.

Components built from tarballs (not from Git) are stored in the CableLabs Maven repository.  A set of default read-only credentials are provided in the default gradle.properties file. Non-read-only credentials are only needed once the script has been updated to support publishing of components to Maven and you are going to publish a component update via the Gradle script.  Instructions for specifying your own credentials are provided below.

Initial Setup:

1. A Java virtual machine must be installed in order to run the gradle build scripts.

2. Ensure the private key you use for github.com is not password protected, and update the $HOME/.ssh/config entry for github.com to reference the non-password-protected key.  The Gradle Git plugin does not successfully clone repositories if your ssh keys are password protected.  

3. Ensure github.com is added to known_hosts by ssh-ing to github.com and accepting the prompt to add the host entry to known_hosts.

CVP2 Gradle build script configuration:

The root gradle.properties file stores directory settings used by the build scripts:
 - base_path: is a base directory relative to the $HOME directory
 - source_dirname: a subdirectory of base_path where components will be extracted or Git cloned and built
 - install_dirname: a subdirectory of base_path where components will be installed
 - Default CableLabs maven credentials (read-only user)
 - gst_uninstalled_core: set to true if using gstreamer components from the gst uninstalled environment
 - gst_uninstalled_dlnasrc: set to true if using gst-plugins-dlnasrc from the gst uninstalled environment
 - gst_uninstalled_dtcpip: set to true if using gst-plugins-dtcpip from the gst uninstalled environment

Building with gst_uninstalled_core=true will also delete .la files from the install directory to deal with libtool linking issues against libraries not present in the libdir location specified by the .la file (see post_install_remove_la_files in each project).

The 'external' subproject builds tarball-installable components retrieved from the CableLabs maven repository.  The external  gradle.properties file stores the specific versions of those individual components which will be downloaded from the CableLabs maven repository.

The gradle directory contains the Gradle wrapper support.

The remaining subdirectories contain gradle.properties files which store Git repository and branch information along with build-specific configuration settings.

Installation:

 - Run './gradlew' to download all Maven-accessible components and clone all Git repositories.
 - Run './gradlew showPkgCommand' to display an 'apt-get install' command line which can be pasted in a shell in order to install package-available dependencies
 - Run './gradlew installDependencies' to install the Maven-accessible components
 - Run './gradlew install' to install all components from Git repositories
 - Run './gradlew generateEnvSetup' to generate an env_setup script in $HOME/(base_path) which updates environment variables to point to the $HOME/(base_path)/(install_dirname) directory as the install root

Optional Gradle download and installation:
 - Download Gradle from http://www.gradle.org/downloads
 - Extract the zip and add the bin path to the PATH environment variable
 - Create a $HOME/.gradle directory
 - Create a $HOME/.gradle/gradle.properties file

Optional Gradle configuration supporting retrieval of components from the CableLabs Maven repository:

 - Log in to https://community.cablelabs.com/mvn/webapp/profile.html using your CableLabs credentials
 - Click on your user name in the upper-right (Logged in as _______)
 - Enter your password in the 'current password' box and click the 'Unlock' button
 - Copy into the clipboard the value in the 'Encrypted Password' box
 - Add two entries to a gradle.local.properties file in the root project directory:
cl_repo_user=(your CableLabs user name)
cl_repo_password=(the text from the 'Encrypted Password' field)
 - Save the file

The 'checkout_branch' Gradle property specifies which branch is checked out for Git-based modules.  The root gradle.properties defines a default checkout_branch property which can be overridden in each individual module.

